"use strict";
// Programmer's Name: Cheng
// Program Name: Code library to make life easier on students writing text based programs
//               with Rhino 1.7.7.1 JavaScript engine running on Java Virtual Machine.
//               Does not work with any web browsers.
//////////////////////////////////////////////////////////////////////////

// Do NOT edit this file!

// print is built-in equivalent to println
var pr = function(str){
    if (!str){
        str = "";
    }
    var outStr = "" + str;
    for (var i = 2; i < arguments.length; ++i){
        outStr += " " + arguments[i];
    }
    java.lang.System.out.print(outStr);
};

var getInput = (function(){
    var stdin = new java.io.BufferedReader(new java.io.InputStreamReader(java.lang.System['in']));
    return function(){return stdin.readLine();};
})();

var javaSleep = function(timeMilisec){java.lang.Thread.sleep(timeMilisec);}

var currentDate = function(){return Date.now();};
var getTime = currentDate; // Deprecated. For historic compatibility only.

var getWorkingDirectory = function(){return java.lang.System.getProperty("user.dir");}

// File reading
var newFileReader = function(fileName){return new java.util.Scanner(new java.io.File(fileName));} // use hasNext() and nextLine() on result
var fileHasInput = function(openedFileReader){return openedFileReader.hasNext();}
var fileGetInput = function(openedFileReader){return openedFileReader.nextLine();}

// Deprecated. File reading. For historic compatibility only.
var openFile = newFileReader;
var hasNextLine = fileHasInput;
var getNextLine = fileGetInput;


// File writing
var newFileWriter = function(fileName){return new java.io.FileWriter(fileName);}
var newFileAppender = function(fileName){return new java.io.FileWriter(fileName, true);}
var filePrint = function(openedFileWriterAppender, str){
    if (!str){
        str = "";
    }
    var outStr = "" + str;
    for (var i = 2; i < arguments.length; ++i){
        outStr += " " + arguments[i];
    }
    openedFileWriterAppender.write(outStr + "\n");
}
var filePr = function(openedFileWriterAppender, str){
    if (!str){
        str = "";
    }
    var outStr = "" + str;
    for (var i = 2; i < arguments.length; ++i){
        outStr += " " + arguments[i];
    }
    openedFileWriterAppender.write(outStr);
}
var fileClose = function(openedFileWriterAppender){openedFileWriterAppender.close();}

var throwError = function(msg){
    if (!msg){
        msg = "";
    }
    msg = "" + msg;
    if (msg !== ""){
        msg += " ";
    }
    
    try{ // hack to try make Rhino give us a JavaScript stack trace
        throw new org.mozilla.javascript.WrappedException(new java.lang.RuntimeException("JavaScript stack trace only available if Rhino is running in interpreter mode, i.e. with command line arguments: -opt -1"));
    }catch(e){
        var st = "" + e.getScriptStackTrace();
        if (st === ""){
            msg += ("Error in myprogram.js line:unknown. Try ensure Rhino is in interpreter mode.");
        } else {
            var myprogramLineNumRegEx = /(myprogram\.js:)(\d+)/g;
            var matches = myprogramLineNumRegEx.exec(st);
            if (matches.length > 0){
                var match = matches[0].replace(myprogramLineNumRegEx, "$2");
                st = ("Error in myprogram.js line:" + match + "\n");// + st;
            } else {
                st = "Error " + st;
            }
            msg += (st);
            
            //print(e.getLineNumber());
            //print(new java.io.File(e.getSourceName()).getName());
        }
    }
    
    throw new Error("\njs: " + msg);
}

// COLORS! see: https://en.wikipedia.org/wiki/ANSI_escape_code#Colors
// Use by printing out the ANSI, or color216 codes.
var ANSI_RESET = "\u001B[0m";
var ANSI_BLACK = "\u001B[30m";
var ANSI_RED = "\u001B[31m";
var ANSI_GREEN = "\u001B[32m";
var ANSI_YELLOW = "\u001B[33m";
var ANSI_BLUE = "\u001B[34m";
var ANSI_PURPLE = "\u001B[35m";
var ANSI_CYAN = "\u001B[36m";
var ANSI_WHITE = "\u001B[37m";

var color216code = function(r,g,b){ // r,g,b ranges from 0 to 5
    if (r < 0){
        r = 0;
    }
    if (g < 0){
        g = 0;
    }
    if (b < 0){
        b = 0;
    }
    if (r > 5){
        r = 5;
    }
    if (g > 5){
        g = 5;
    }
    if (b > 5){
        b = 5;
    }
    return "\u001B[38;5;"+ (16 + 36 * r + 6 * g + b) +"m";
}
var bgcolor216code = function(r,g,b){ // r,g,b ranges from 0 to 5
    if (r < 0){
        r = 0;
    }
    if (g < 0){
        g = 0;
    }
    if (b < 0){
        b = 0;
    }
    if (r > 5){
        r = 5;
    }
    if (g > 5){
        g = 5;
    }
    if (b > 5){
        b = 5;
    }
    return "\u001B[48;5;"+ (16 + 36 * r + 6 * g + b) +"m";
}

// Example usage:
// print(ANSI_RED + "Hi\n" + ANSI_GREEN + "What's your" + ANSI_BLUE + " name?");
// print(ANSI_RESET);
// print(bgcolor216code(5,5,5) + color216code(5, 0, 0) + "RED");
// print(ANSI_RESET);
